// <auto-generated />
using System;
using EFDataAccessLibrary.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFDataAccessLibrary.Migrations
{
    [DbContext(typeof(PeopleContext))]
    partial class PeopleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("EFDataAccessLibrary.Models.Apartment", b =>
                {
                    b.Property<int>("BuildingNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApartmentNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasMaxLength(50)
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ContractEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("ContractStartDate")
                        .HasColumnType("date");

                    b.Property<int>("Deposit")
                        .HasMaxLength(50)
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ejari")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TenantName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("BuildingNumber", "ApartmentNumber");

                    b.ToTable("Apartments2");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Models.ApartmentCheque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasMaxLength(50)
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ApartmentBuildingNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApartmentNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ApartmentNumber1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuildingNumber")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsCashed")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentBuildingNumber", "ApartmentNumber1");

                    b.ToTable("ApartmentCheques2");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Models.ApartmentPPM", b =>
                {
                    b.Property<int>("BuildingNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApartmentNumber")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Q1Date")
                        .HasColumnType("date");

                    b.Property<bool>("Q1Done")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Q1Time")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Q2Date")
                        .HasColumnType("date");

                    b.Property<bool>("Q2Done")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Q2Time")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Q3Date")
                        .HasColumnType("date");

                    b.Property<bool>("Q3Done")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Q3Time")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Q4Date")
                        .HasColumnType("date");

                    b.Property<bool>("Q4Done")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Q4Time")
                        .HasColumnType("TEXT");

                    b.HasKey("BuildingNumber", "ApartmentNumber");

                    b.ToTable("ApartmentPPMs2");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Models.ApartmentService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ApartmentBuildingNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApartmentNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ApartmentNumber1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuildingNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Done")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentBuildingNumber", "ApartmentNumber1");

                    b.ToTable("ApartmentServices2");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Models.Contract", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasMaxLength(50)
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuildingNumber")
                        .HasMaxLength(50)
                        .HasColumnType("INTEGER");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("ContractId");

                    b.ToTable("Contracts2");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Models.ContractDue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasMaxLength(50)
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContractId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("ContractDues2");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Models.PPM", b =>
                {
                    b.Property<int>("PPMId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuildingNumber")
                        .HasMaxLength(50)
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("PPMId");

                    b.ToTable("PPMs2");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Models.PPMtime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsDone")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PPMId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("PPMId");

                    b.ToTable("PPMtimes2");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Models.ApartmentCheque", b =>
                {
                    b.HasOne("EFDataAccessLibrary.Models.Apartment", null)
                        .WithMany("ApartmentCheques")
                        .HasForeignKey("ApartmentBuildingNumber", "ApartmentNumber1");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Models.ApartmentPPM", b =>
                {
                    b.HasOne("EFDataAccessLibrary.Models.Apartment", "Apartment")
                        .WithOne("PPM")
                        .HasForeignKey("EFDataAccessLibrary.Models.ApartmentPPM", "BuildingNumber", "ApartmentNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartment");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Models.ApartmentService", b =>
                {
                    b.HasOne("EFDataAccessLibrary.Models.Apartment", null)
                        .WithMany("ApartmentServices")
                        .HasForeignKey("ApartmentBuildingNumber", "ApartmentNumber1");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Models.ContractDue", b =>
                {
                    b.HasOne("EFDataAccessLibrary.Models.Contract", null)
                        .WithMany("ContractDues")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFDataAccessLibrary.Models.PPMtime", b =>
                {
                    b.HasOne("EFDataAccessLibrary.Models.PPM", null)
                        .WithMany("PPMtimes")
                        .HasForeignKey("PPMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFDataAccessLibrary.Models.Apartment", b =>
                {
                    b.Navigation("ApartmentCheques");

                    b.Navigation("ApartmentServices");

                    b.Navigation("PPM");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Models.Contract", b =>
                {
                    b.Navigation("ContractDues");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Models.PPM", b =>
                {
                    b.Navigation("PPMtimes");
                });
#pragma warning restore 612, 618
        }
    }
}
